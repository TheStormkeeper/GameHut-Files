;----------------------------------------------------------
;		RING CODE
;----------------------------------------------------------
;RING STRUCTURE STUFF
		RSSET	0
RING_X:		RS.L	1
RING_Y:		RS.L	1
RING_MX:	RS.L	1
RING_MY:	RS.L	1
RING_GRAV:	RS.L	1
RING_LIFE:	RS.W	1
RING_SIZE:	RS.B	0

RINGS:		EQU	64	;TOTAL NUMBER OF RINGS

		RSSET	SYSTEMEND
RINGDATA:	RS.B	RINGS*RING_SIZE	;RING SYSTEM

RINGEND:	RS.B	0

;-------------------------
;	INITIALISE RINGS
;-------------------------
RINGINIT:	LEA.L	RINGDATA,A0
		MOVE.W	#RINGS-1,D0			;NUMBER OF RINGS TO PROCESS
		MOVE.W	#0,D1
@L1:		MOVE.W	D1,RING_LIFE(A0)		;SET LIFE SPAN TO 0
		ADD.L	#RING_SIZE,A0
		DBRA	D0,@L1
		RTS

;-------------------------
;	PROCESS RINGS
;-------------------------
PROCRING:	LEA.L	RINGDATA,A0
		MOVE.W	#RINGS-1,D0
		AND.W	#$FF,D7				;CLEAR AWAY ANY PREVIOUS SIZE INFO FROM SPRITE COUNT
		ADD.W	#S_2X2,D7			;ALL THESE RINGS WILL BE 2X2 IN SIZE
		MOVE.W	#S_PAL2+$1100/32,D6		;ALL RINGS WILL USE THIS PALETTE AND VRAM LOCATION

@L1:		TST.W	RING_LIFE(A0)
		BEQ.S	@SKIP
;ADD SPRITE TO TABLE
		MOVE.W	RING_Y(A0),(A1)+		;Y POSITION
		MOVE.W	D7,(A1)+			;SIZE 2X2 CHARACTERS AND SPRITE NUM
		MOVE.W	D6,(A1)+			;PALETTE NUMBER+GRAPHIC VRAM LOCATION/32
		MOVE.W	RING_X(A0),(A1)+		;X POSITION ($80 IS LEFT OF SCREEN)
		ADD.W	#1,D7				;INCREMENT SPRITE COUNT
;PROCESS PHYSICS
		MOVE.L	RING_MX(A0),D1
		ADD.L	D1,RING_X(A0)
		MOVE.L	RING_MY(A0),D1
		ADD.L	D1,RING_Y(A0)
		MOVE.L	RING_GRAV(A0),D1
		ADD.L	D1,RING_MY(A0)
		SUB.W	#1,RING_LIFE(A0)
;CLIP
		MOVE.W	RING_Y(A0),D1			;Y CLIP
		SUB.W	#$80-16,D1
		CMP.W	#224+16,D1
		BHI.S	@CLIP
		MOVE.W	RING_X(A0),D1			;X CLIP
		SUB.W	#$80-16,D1
		CMP.W	#320+16,D1
		BLS.S	@SKIP
@CLIP:
		CLR.W	RING_LIFE(A0)

@SKIP:		ADD.L	#RING_SIZE,A0
		DBRA	D0,@L1
		RTS

;-------------------------
;	ADD A RING
;-------------------------
ADDRING:	LEA.L	RINGDATA,A0
		MOVE.W	#RINGS-1,D0
		MOVE.W	#10000,D2			;STORE SHORTEST REMAINING RING LIFE HERE
		MOVE.L	A0,A1				;SHORTEST LIFE RING POSITION

@L1:		MOVE.W	RING_LIFE(A0),D1
		BEQ.S	@ADD				;RING WITH ZERO LIFE, SO FREE SLOT FOUND
		CMP.W	D1,D2				;SHORTER LIFE THAN CURRENT SHORTEST?
		BLE.S	@SKIP
		MOVE.W	D1,D2				;NEW SHORTEST
		MOVE.L	A0,A1				;NEW SHORTEST POSITION
@SKIP:		ADD.L	#RING_SIZE,A0
		DBRA	D0,@L1

		MOVE.L	A1,A0				;REPLACE RING WITH SHORTEST LIFE LEFT IF ZERO NOT FOUND

@ADD:		SWAP.W	D3
		CLR.W	D3
		SWAP.W	D4
		CLR.W	D4
		MOVE.L	D3,RING_X(A0)
		MOVE.L	D4,RING_Y(A0)
		MOVE.L	D5,RING_MX(A0)
		MOVE.L	D6,RING_MY(A0)
		MOVE.L	D7,RING_GRAV(A0)
		MOVE.W	#120,RING_LIFE(A0)
		RTS